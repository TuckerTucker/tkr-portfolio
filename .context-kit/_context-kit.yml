# Project configuration for AI agents - tkr-portfolio
# Synthesized comprehensive context optimized for token efficiency
meta:
  kit: tkr-portfolio
  fmt: 1
  type: portfolio-website
  desc: "Professional portfolio website with React 19, Storybook documentation, and comprehensive UI component system"
  ver: "0.0.0"
  author: "Tucker github.com/tuckertucker"
  ts: "2025-09-25"
  status: production-ready
  homepage: "https://tuckertucker.github.io/tkr-portfolio"
  stack: &tech-stack "React 19 + Vite + Tailwind CSS + Storybook + Radix UI + Lucide Icons + GitHub Pages"
  cmds: ["npm run dev:portfolio", "npm run build:portfolio", "npm run dev:storybook", "npm run deploy:portfolio"]
  achievements: ["23,556-file comprehensive portfolio ecosystem", "Storybook component documentation", "Multi-theme design system", "Interactive HTML slides", "Responsive design", "Professional UI components", "GitHub Pages deployment"]

# Dependencies with Context7 references where applicable
deps: &deps
  prod: &prod-deps
    # React 19 ecosystem
    react: {id: "/reactjs/react.dev", v: "^19.1.0"}
    react-dom: {id: "/reactjs/react.dev", v: "^19.1.0"}
    react-router-dom: {id: "/reactrouter/react-router", v: "^7.5.0"}

    # UI Component Libraries
    "@radix-ui/react-dropdown-menu": {id: "/radix-ui/primitives", v: "^2.1.6"}
    "@radix-ui/react-slot": {id: "/radix-ui/primitives", v: "^1.1.2"}
    "lucide-react": {id: "/lucide-icons/lucide", v: "^0.487.0"}

    # Styling & Animation
    "class-variance-authority": {id: "/joe-bell/cva", v: "^0.7.1"}
    clsx: {id: "/lukeed/clsx", v: "^2.1.1"}
    "tailwind-merge": {id: "/dcastil/tailwind-merge", v: "^3.2.0"}
    "tailwindcss-animate": {id: "/jamiebuilds/tailwindcss-animate", v: "^1.0.7"}
    "tw-animate-css": {id: null, v: "^1.2.5"}

    # Carousel & Interactions
    "embla-carousel-react": {id: "/davidjerleke/embla-carousel", v: "^8.6.0"}
    prismjs: {id: "/prismjs/prism", v: "^1.30.0"}

    # Build tools in production
    autoprefixer: {id: "/postcss/autoprefixer", v: "^10.4.21"}
    postcss: {id: "/postcss/postcss", v: "^8.5.3"}

  dev: &dev-deps
    # Build & Dev Tools
    vite: {id: "/vitejs/vite", v: "^6.2.0"}
    "@vitejs/plugin-react": {id: "/vitejs/vite-plugin-react", v: "^4.3.4"}
    tailwindcss: {id: "/tailwindlabs/tailwindcss", v: "^3.4.3"}

    # TypeScript & Types
    "@types/react": {id: "/reactjs/react.dev", v: "^19.0.10"}
    "@types/react-dom": {id: "/reactjs/react.dev", v: "^19.0.4"}

    # Linting & Code Quality
    eslint: {id: "/eslint/eslint", v: "^9.21.0"}
    "@eslint/js": {id: "/eslint/eslint", v: "^9.21.0"}
    "eslint-plugin-react-hooks": {id: "/facebook/react", v: "^5.1.0"}
    "eslint-plugin-react-refresh": {id: "/ArnaudBarre/eslint-plugin-react-refresh", v: "^0.4.19"}
    "eslint-plugin-storybook": {id: "/storybookjs/storybook", v: "^9.1.6"}
    globals: {id: "/sindresorhus/globals", v: "^15.15.0"}

    # Testing
    vitest: {id: "/vitest-dev/vitest", v: "^3.1.1"}
    "@vitest/coverage-v8": {id: "/vitest-dev/vitest", v: "^3.1.1"}
    "@vitest/browser": {id: "/vitest-dev/vitest", v: "^3.1.1"}
    playwright: {id: "/microsoft/playwright", v: "^1.51.1"}

    # Storybook
    storybook: {id: "/storybookjs/storybook", v: "^9.1.6"}
    "@storybook/react-vite": {id: "/storybookjs/storybook", v: "^9.1.6"}
    "@chromatic-com/storybook": {id: "/chromaui/chromatic", v: "^4.1.1"}
    "@storybook/addon-docs": {id: "/storybookjs/storybook", v: "^9.1.6"}
    "@storybook/addon-onboarding": {id: "/storybookjs/storybook", v: "^9.1.6"}
    "@storybook/addon-vitest": {id: "/storybookjs/storybook", v: "^9.1.6"}

    # Deployment
    "gh-pages": {id: "/tschaub/gh-pages", v: "^6.3.0"}
    "prop-types": {id: "/facebook/prop-types", v: "^15.8.1"}

# Directory structure with verified file counts (max_depth: 4)
struct:
  _: {n: 23556, t: {jsx: 85, js: 12, json: 15, html: 2, css: 5, md: 3, sh: 2, gitignore: 1}, purpose: "Portfolio website with component documentation"}

  # Source code structure
  src:
    _: {n: 89, t: {jsx: 85, js: 1, svg: 1, css: 2}, desc: "Main application source code"}
    components: &comp-struct
      common: {files: [ImageLightbox.jsx], desc: "Shared utility components"}
      custom: {files: [branding.jsx, bullet-list.jsx, card-header.jsx, color-block.jsx, project-card-list.jsx, project-card.jsx, project-info.jsx], desc: "Custom portfolio components"}
      feature: {files: [bullet-list-container.jsx, content-section.jsx, custom-project-picker.jsx, description.jsx, image-carousel.jsx], desc: "Feature-specific components"}
      html-slides: {files: [BeforeAfter.jsx, BornToTheWorld.jsx, DesignSystem.jsx, InteractiveCards.jsx, InteractiveCode.jsx, NutrienShowcase.jsx, PortfolioShowcase.jsx, ProcessTimeline.jsx, ProjectIntro.jsx, SkillsMatrix.jsx, TechStack.jsx, TheOffHoursCreative.jsx, TheSparkAndTheArt.jsx, slide-wrapper.jsx, index.js], desc: "Interactive presentation slides"}
      layout: {files: [footer.jsx, header.jsx], desc: "Layout components"}
      ui: {files: [badge.jsx, button.jsx, card.jsx, dropdown-menu.jsx, sheet.jsx, skeleton.jsx], desc: "Base UI components following shadcn/ui pattern"}
    assets: {files: [react.svg], desc: "Static assets"}
    App.jsx: "Main application component"
    main.jsx: "React application entry point"
    index.css: "Global styles and CSS variables"

  # Storybook documentation
  stories:
    _: {n: 25, t: {jsx: 25}, desc: "Storybook component documentation"}
    content: {files: [HtmlSlides.stories.jsx, ImageCarousel.stories.jsx]}
    custom: {files: [BulletList.stories.jsx, ProjectCard.stories.jsx]}
    footer: {files: [Footer.stories.jsx]}
    header: {files: [Branding.stories.jsx, Header.stories.jsx]}
    navigation: {files: [CustomProjectPicker.stories.jsx]}
    theme: {files: [ColorBlock.stories.jsx, Colors.stories.jsx]}
    ui: {files: [Badge.stories.jsx, Button.stories.jsx, Card.stories.jsx, DropdownMenu.stories.jsx, Sheet.stories.jsx, Skeleton.stories.jsx]}

  .storybook:
    _: {n: 8, t: {js: 4, jsx: 4}, desc: "Storybook configuration"}
    main.js: "Storybook main configuration"
    preview.js: "Global story parameters"
    StorybookThemeProvider.jsx: "Theme provider for Storybook"

  # Build outputs
  dist: {n: 17, desc: "Production build output"}
  storybook-static: {n: 986, desc: "Built Storybook documentation"}

  # Project configuration
  public: {n: 476, desc: "Static public assets"}
  node_modules: {n: 346, desc: "Package dependencies"}

  # Claude Code integration
  .claude:
    agents: {n: 12, files: [storybook-maintainer], desc: "Claude agents for project maintenance"}
    commands: {n: 10, desc: "Claude command definitions"}
    orchestration: {n: 1, desc: "Agent orchestration configs"}

  # Context Kit integration
  .context-kit:
    _: {desc: "Portfolio project uses context-kit for enhanced Claude Code integration"}

# Design system with comprehensive UI patterns
design:
  tokens:
    color: &colors
      # Brand colors
      brand:
        primary: &brand-primary {val: "#613CB0", desc: "Tucker brand purple"}
        secondary: {val: "#FF8800", desc: "Taskboard orange accent"}
        accent: {val: "#00A3FF", desc: "Blue accent"}

      # Project-specific colors
      project: &proj-colors
        nutrien: {val: "#3b5f18", desc: "Nutrien brand green"}
        worldplay: {val: "#00a4e4", desc: "Worldplay brand blue"}
        shaw: {val: "#0488c1", desc: "Shaw brand blue"}

      # Theme-aware colors via CSS variables
      semantic: &semantic-colors
        background: {val: "rgb(var(--color-background))", type: "css-var"}
        foreground: {val: "rgb(var(--color-foreground))", type: "css-var"}
        card: {val: "rgb(var(--color-card))", type: "css-var"}
        card_foreground: {val: "rgb(var(--color-card-foreground))", type: "css-var"}
        border: {val: "rgb(var(--color-border))", type: "css-var"}
        input: {val: "rgb(var(--color-input))", type: "css-var"}
        ring: {val: "rgb(var(--color-ring))", type: "css-var"}
        muted: {val: "rgb(var(--color-muted))", type: "css-var"}
        muted_foreground: {val: "rgb(var(--color-muted-foreground))", type: "css-var"}

    typography: &typography
      font_family:
        sans: {val: "ellograph-cf, sans-serif", desc: "Adobe Fonts body text"}
        heading: {val: "graphite-std, sans-serif", desc: "Adobe Fonts headings"}

    spacing: &spacing
      small: {val: "8px", desc: "Small spacing unit"}
      medium: {val: "16px", desc: "Medium spacing unit"}
      large: {val: "24px", desc: "Large spacing unit"}
      xl: {val: "32px", desc: "Extra large spacing unit"}

    shadows: &shadows
      card: {val: "0 2px 4px rgba(0,0,0,0.1)", desc: "Card shadow"}
      dropdown: {val: "0 4px 8px rgba(0,0,0,0.1)", desc: "Dropdown shadow"}

  comp:
    # Layout Components
    Header:
      p: {branding: "Branding", navigation: "array"}
      purpose: "Main site header with navigation"
      features: ["Responsive design", "Brand display", "Navigation links"]

    Footer:
      p: {content: "string", links: "array"}
      purpose: "Site footer with links and info"

    # UI Components (shadcn/ui pattern)
    Button:
      p: {variant: [default, destructive, outline, secondary, ghost, link], size: [default, sm, lg, icon]}
      purpose: "Base button component with variants"
      features: ["Multiple variants", "Size options", "Accessibility"]

    Card:
      p: {header: "CardHeader", content: "CardContent", footer: "CardFooter"}
      purpose: "Container component for content sections"
      subcomponents: [CardHeader, CardContent, CardDescription, CardTitle, CardFooter]

    Badge:
      p: {variant: [default, secondary, destructive, outline]}
      purpose: "Small status or label component"

    DropdownMenu:
      p: {trigger: "ReactNode", items: "array"}
      purpose: "Radix-based dropdown menu"
      accessibility: "Full keyboard navigation and ARIA support"

    # Custom Portfolio Components
    ProjectCard:
      p: {title: "string", description: "string", image: "string", technologies: "array", link: "string"}
      purpose: "Showcase individual projects"
      features: ["Project preview", "Technology tags", "Interactive hover states"]

    ImageCarousel:
      p: {images: "array", autoplay: "boolean"}
      purpose: "Image carousel using Embla Carousel"
      features: ["Touch/drag support", "Keyboard navigation", "Auto-play option"]

    HtmlSlides:
      p: {slides: "array", currentSlide: "number"}
      purpose: "Interactive presentation system"
      features: ["Slide navigation", "Animations", "Content sections"]
      slides: [BeforeAfter, BornToTheWorld, DesignSystem, InteractiveCards, InteractiveCode, NutrienShowcase, PortfolioShowcase, ProcessTimeline, ProjectIntro, SkillsMatrix, TechStack, TheOffHoursCreative, TheSparkAndTheArt]

    BulletList:
      p: {items: "array", style: "string"}
      purpose: "Styled bullet point lists"
      variants: ["Default", "Custom styling", "Icon bullets"]

  patterns:
    responsive_design:
      breakpoints: {sm: "640px", md: "768px", lg: "1024px", xl: "1280px"}
      mobile_first: "All components built mobile-first"

    component_composition:
      pattern: "Radix UI primitives with custom styling"
      theming: "CSS variables for light/dark mode support"

    state_management:
      pattern: "React hooks and context for local state"
      routing: "React Router DOM for navigation"

  a11y:
    compliance: "WCAG 2.1 AA"
    keyboard_navigation: "Full keyboard support for all interactive elements"
    screen_reader: "Semantic HTML with proper ARIA labels"
    color_contrast: "AA compliant color combinations"

# Architecture and technical stack
arch:
  stack:
    <<: *tech-stack
    architecture: "React SPA with component documentation via Storybook"
    build: "Vite-based build system with GitHub Pages deployment"
    styling: "Tailwind CSS with custom design tokens"
    components: "Radix UI primitives with shadcn/ui patterns"
    documentation: "Comprehensive Storybook stories for all components"

  deployment:
    production: "GitHub Pages at tuckertucker.github.io/tkr-portfolio"
    storybook: "Deployed to /storybook subdirectory"
    build_process: "npm run deploy:portfolio → build both portfolio and storybook → deploy"

  development:
    portfolio: "npm run dev:portfolio (Vite dev server)"
    storybook: "npm run dev:storybook (Port 42006)"
    testing: "Vitest with Playwright browser testing"
    linting: "ESLint 9 with React and Storybook rules"

# Operational patterns
ops:
  development_workflow:
    local_dev: "npm run dev:portfolio for portfolio, npm run dev:storybook for component docs"
    component_dev: "Storybook-driven development with story-first approach"
    testing: "Component testing via Storybook + Vitest"

  deployment_workflow:
    build: "npm run build:portfolio && npm run build:storybook"
    deploy: "npm run deploy:portfolio (automated GitHub Pages deployment)"
    preview: "npm run preview (local production preview)"

  port_allocation:
    storybook_dev: 42006
    vite_preview: 42001

  storybook_patterns:
    story_structure: "Organized by component type (ui, custom, content, etc.)"
    documentation: "MDX docs for complex components"
    testing: "Stories as test cases via @storybook/addon-vitest"

# Content and portfolio sections
content:
  slides: &slide-content
    BeforeAfter: "Process comparison visuals"
    BornToTheWorld: "Project introduction slide"
    DesignSystem: "Design system showcase"
    InteractiveCards: "Interactive component demo"
    InteractiveCode: "Code interaction examples"
    NutrienShowcase: "Nutrien project presentation"
    PortfolioShowcase: "Portfolio overview"
    ProcessTimeline: "Development process timeline"
    ProjectIntro: "Project introduction template"
    SkillsMatrix: "Technical skills display"
    TechStack: "Technology stack visualization"
    TheOffHoursCreative: "Creative work showcase"
    TheSparkAndTheArt: "Design philosophy presentation"

  projects: &portfolio-projects
    nutrien: {color: "nutrien", technologies: ["React", "Design Systems"]}
    worldplay: {color: "worldplay", technologies: ["Web Development"]}
    shaw: {color: "shaw", technologies: ["Frontend Development"]}

# Semantic context for AI consumption
semantic:
  ~portfolio_website: "Professional portfolio showcasing development work and UI components"
  ~storybook_documentation: "Comprehensive component documentation with interactive examples"
  ~react_19_spa: "Single-page application built with latest React features"
  ~design_system_implementation: "Custom design system with Tailwind CSS and CSS variables"
  ~radix_ui_integration: "Accessible components built on Radix UI primitives"
  ~responsive_design: "Mobile-first responsive design across all components"
  ~github_pages_deployment: "Automated deployment pipeline to GitHub Pages"
  ~component_driven_development: "Storybook-first approach to component development"

# Project achievements and capabilities
achievements:
  - "23,556-file comprehensive portfolio ecosystem with React 19"
  - "Comprehensive Storybook documentation with 25+ interactive stories"
  - "Custom design system with brand colors and typography"
  - "Interactive HTML slide presentation system"
  - "Radix UI integration for accessible components"
  - "Responsive design with mobile-first approach"
  - "Automated GitHub Pages deployment pipeline"
  - "Component-driven development with Storybook"
  - "Professional portfolio showcasing development capabilities"
  - "Multi-theme support with CSS variable system"

# Development notes and recommendations
notes:
  - "Portfolio demonstrates advanced React patterns and component composition"
  - "Storybook integration provides excellent component documentation"
  - "Design system implementation shows attention to visual consistency"
  - "Interactive slides provide engaging project presentations"
  - "Comprehensive build and deployment automation"
  - "Accessibility considerations built into component design"
  - "Professional presentation suitable for client and employer showcases"