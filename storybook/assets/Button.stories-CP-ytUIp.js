import{j as e}from"./jsx-runtime-D_zvdyIk.js";import"./index-D4lIrffr.js";import{B as t}from"./button-WRwdT_qc.js";import{c as U}from"./createLucideIcon-DWdTuAPo.js";import"./utils-DjqsqOe8.js";/**
 * @license lucide-react v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const R=[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]],z=U("mail",R),a=()=>e.jsx(t,{children:"Default Button"}),o=()=>e.jsx(t,{variant:"secondary",children:"Secondary"}),s=()=>e.jsx(t,{variant:"destructive",children:"Destructive"}),r=()=>e.jsx(t,{variant:"outline",children:"Outline"}),n=()=>e.jsx(t,{variant:"ghost",children:"Ghost"}),i=()=>e.jsx(t,{variant:"link",children:"Link"}),c=()=>e.jsxs(t,{children:[e.jsx(z,{className:"mr-2 h-4 w-4"})," Login with Email"]}),d=()=>e.jsx(t,{variant:"outline",size:"icon",children:e.jsx(z,{className:"h-4 w-4"})}),m=()=>e.jsxs(t,{disabled:!0,children:[e.jsx("span",{className:"animate-spin mr-2",children:"⏳"}),"Please wait"]});a.storyName="Default";o.storyName="Secondary Variant";s.storyName="Destructive Variant";r.storyName="Outline Variant";n.storyName="Ghost Variant";i.storyName="Link Variant";c.storyName="With Icon";d.storyName="Icon Only";m.storyName="Loading State";const J={title:"UI Primitives/Button (shadcn)"};a.__docgenInfo={description:"",methods:[],displayName:"Default"};o.__docgenInfo={description:"",methods:[],displayName:"Secondary"};s.__docgenInfo={description:"",methods:[],displayName:"Destructive"};r.__docgenInfo={description:"",methods:[],displayName:"Outline"};n.__docgenInfo={description:"",methods:[],displayName:"Ghost"};i.__docgenInfo={description:"",methods:[],displayName:"Link"};c.__docgenInfo={description:"",methods:[],displayName:"WithIcon"};d.__docgenInfo={description:"",methods:[],displayName:"IconOnly"};m.__docgenInfo={description:"",methods:[],displayName:"Loading"};var u,l,p;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:"() => <Button>Default Button</Button>",...(p=(l=a.parameters)==null?void 0:l.docs)==null?void 0:p.source}}};var h,y,g;o.parameters={...o.parameters,docs:{...(h=o.parameters)==null?void 0:h.docs,source:{originalSource:'() => <Button variant="secondary">Secondary</Button>',...(g=(y=o.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};var N,B,_;s.parameters={...s.parameters,docs:{...(N=s.parameters)==null?void 0:N.docs,source:{originalSource:'() => <Button variant="destructive">Destructive</Button>',...(_=(B=s.parameters)==null?void 0:B.docs)==null?void 0:_.source}}};var v,f,x;r.parameters={...r.parameters,docs:{...(v=r.parameters)==null?void 0:v.docs,source:{originalSource:'() => <Button variant="outline">Outline</Button>',...(x=(f=r.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};var I,S,j;n.parameters={...n.parameters,docs:{...(I=n.parameters)==null?void 0:I.docs,source:{originalSource:'() => <Button variant="ghost">Ghost</Button>',...(j=(S=n.parameters)==null?void 0:S.docs)==null?void 0:j.source}}};var L,D,k;i.parameters={...i.parameters,docs:{...(L=i.parameters)==null?void 0:L.docs,source:{originalSource:'() => <Button variant="link">Link</Button>',...(k=(D=i.parameters)==null?void 0:D.docs)==null?void 0:k.source}}};var O,w,G;c.parameters={...c.parameters,docs:{...(O=c.parameters)==null?void 0:O.docs,source:{originalSource:`() => <Button>
    <Mail className="mr-2 h-4 w-4" /> Login with Email
  </Button>`,...(G=(w=c.parameters)==null?void 0:w.docs)==null?void 0:G.source}}};var V,E,W;d.parameters={...d.parameters,docs:{...(V=d.parameters)==null?void 0:V.docs,source:{originalSource:`() => <Button variant="outline" size="icon">
    <Mail className="h-4 w-4" />
  </Button>`,...(W=(E=d.parameters)==null?void 0:E.docs)==null?void 0:W.source}}};var b,M,P;m.parameters={...m.parameters,docs:{...(b=m.parameters)==null?void 0:b.docs,source:{originalSource:`() => <Button disabled>
      {/* Use a loading spinner component here if available, or text */}
      <span className="animate-spin mr-2">⏳</span>
      Please wait
    </Button>`,...(P=(M=m.parameters)==null?void 0:M.docs)==null?void 0:P.source}}};const K=["Default","Secondary","Destructive","Outline","Ghost","Link","WithIcon","IconOnly","Loading"];export{a as Default,s as Destructive,n as Ghost,d as IconOnly,i as Link,m as Loading,r as Outline,o as Secondary,c as WithIcon,K as __namedExportsOrder,J as default};
