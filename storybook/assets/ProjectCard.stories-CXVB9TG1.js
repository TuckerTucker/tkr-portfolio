import{j as r}from"./jsx-runtime-D_zvdyIk.js";import"./index-D4lIrffr.js";import{P as n}from"./project-card-B2074Wu0.js";import{D as w,a as D,b as g}from"./dropdown-menu-BBbobDpR.js";import{B as x}from"./button-WRwdT_qc.js";import"./index-B2-v9W4q.js";import"./utils-DjqsqOe8.js";import"./color-block-Dr1vCEeW.js";import"./project-info-C5BGNR4m.js";import"./index-BQQLSK9g.js";import"./index-DsJinFGm.js";const i=[{id:"agentic_ai_kanban",title:"Agentic AI Kanban",color:"#FF8800",subtitle:"Personal"},{id:"nutrien",title:"Nutrien",color:"#9ad441",subtitle:"Safety Portal"},{id:"worldplay",title:"Worldplay",color:"#00a4e4",subtitle:"Analytics Dashboard"},{id:"shaw",title:"Shaw",color:"#0488c1",subtitle:"Phone Portal"}],c=({children:e})=>r.jsxs(w,{children:[r.jsx(D,{asChild:!0,children:r.jsx(x,{variant:"outline",children:"View Projects"})}),r.jsxs(g,{className:"w-72",children:[" ",e]})]}),o=()=>r.jsx(c,{children:r.jsx(n,{...i[0]})});o.storyName="Single Project Card";const t=()=>r.jsx(c,{children:i.map(e=>r.jsx(n,{...e},e.id))});t.storyName="List of Project Cards";const a=()=>{const e=s=>{alert(`Selected Project: ${s.title} (ID: ${s.id})`)};return r.jsx(c,{children:i.map(s=>r.jsx(n,{...s,onClick:e},s.id))})};a.storyName="With Click Handler";const $={title:"Custom Components/Project Card (Dropdown Item)",component:n};o.__docgenInfo={description:"",methods:[],displayName:"SingleCard"};t.__docgenInfo={description:"",methods:[],displayName:"MultipleCards"};a.__docgenInfo={description:"",methods:[],displayName:"WithClickHandler"};var d,p,l;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`() => <DropdownWrapper>
    <ProjectCard {...sampleProjects[0]} />
  </DropdownWrapper>`,...(l=(p=o.parameters)==null?void 0:p.docs)==null?void 0:l.source}}};var m,j,u;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`() => <DropdownWrapper>
    {sampleProjects.map(project => <ProjectCard key={project.id} {...project} />)}
  </DropdownWrapper>`,...(u=(j=t.parameters)==null?void 0:j.docs)==null?void 0:u.source}}};var C,h,P;a.parameters={...a.parameters,docs:{...(C=a.parameters)==null?void 0:C.docs,source:{originalSource:`() => {
  const handleClick = project => {
    alert(\`Selected Project: \${project.title} (ID: \${project.id})\`);
  };
  return <DropdownWrapper>
      {sampleProjects.map(project => <ProjectCard key={project.id} {...project} onClick={handleClick} />)}
    </DropdownWrapper>;
}`,...(P=(h=a.parameters)==null?void 0:h.docs)==null?void 0:P.source}}};const A=["SingleCard","MultipleCards","WithClickHandler"];export{t as MultipleCards,o as SingleCard,a as WithClickHandler,A as __namedExportsOrder,$ as default};
